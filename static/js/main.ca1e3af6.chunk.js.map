{"version":3,"sources":["img/pokemon.jpg","components/CantidadPokemon.jsx","components/ComprarPokemon.jsx","redux/actions/gameShopAction.js","redux/reducers/gameShopReducer.js","redux/actions/buscarAction.js","redux/reducers/buscadorReducer.js","redux/reducers/rootReducer.js","redux/store.js","components/Buscador/BuscadorPokemon.jsx","components/Buscador/ResultadoPokemon.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","CantidadPokemon","props","game_shop","useSelector","state","Fragment","pokemon","ComprarPokemon","dispatch","useDispatch","className","onClick","type","payload","default_game_shop","action","fetchPokemon","valor","Axios","get","then","res","data","catch","error","fetchPokemonFailure","initialState","loading","buscador","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","BuscadorPokemon","useState","pokemonName","setPokemonName","htmlFor","id","value","onChange","e","target","ResultadoPokemon","length","src","sprites","front_default","alt","name","App","style","maxWidth","pokemonImg","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ca1e3af6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemon.f84be7bb.jpg\";","import React from 'react';\nimport { connect, useSelector } from 'react-redux';\n\nfunction CantidadPokemon(props) {\n\n    const game_shop = useSelector((state) => state.game_shop)\n\n    return(\n        <React.Fragment>\n            Unidades: {game_shop.pokemon}\n        </React.Fragment>\n    );\n}\n\n// const mapStateToPorps = (state) => {\n//     return{\n//         game_shop: state.game_shop\n//     }\n// }\n\n// export default connect(mapStateToPorps)(CantidadPokemon);\n\nexport default CantidadPokemon;","import React from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { buy_pokemon_action, return_pokemon_action } from '../redux/actions/gameShopAction';\n\nfunction ComprarPokemon (){\n\n    const dispatch = useDispatch()\n    return (\n        <div>\n            <button className=\"btn btn-dark btn-sm my-2\" onClick={() => { dispatch(buy_pokemon_action(1)) }} >\n                Comprar Pokemon\n            </button>\n            <button className=\"btn btn-dark btn-sm\" onClick={() => { dispatch(return_pokemon_action(1)) }} >\n                Regresar Pokemon\n            </button>\n        </div> \n    );\n}\n   \n\n// const mapDispatchToProps = {\n//     buy_pokemon_action,\n//     return_pokemon_action\n// }\n\n// export default connect(null, mapDispatchToProps)(ComprarPokemon);\nexport default ComprarPokemon;","export const BUY_POKEMON = 'BUY_POKEMON';\nexport const RETURN_POKEMON = 'RETURN_POKEMON';\n\nexport const buy_pokemon_action = (cant) => {\n    return {\n        type: BUY_POKEMON,\n        payload: cant\n    }\n}\n\nexport const return_pokemon_action = (cant) => {\n    return{\n        type: RETURN_POKEMON,\n        payload: cant\n    }\n}\n","import { BUY_POKEMON, RETURN_POKEMON } from \"../actions/gameShopAction\";\n\nconst default_game_shop = {\n    pokemon: 300\n};\n\nconst game_shop = (state = default_game_shop, action) => {\n    switch(action.type) {\n        case BUY_POKEMON: {\n            return{\n                ...state,\n                pokemon: state.pokemon - action.payload\n            }\n        }\n\n        case RETURN_POKEMON: {\n            return{\n                ...state,\n                pokemon: state.pokemon + action.payload\n            }\n        }\n\n        default: return state;\n    }\n}\n\nexport default game_shop;","import Axios from \"axios\";\n\nexport const FETCH_POKEMON_REQUEST = 'FETCH_POKEMON_REQUEST';\nexport const FETCH_POKEMON_SUCCESS = 'FETCH_POKEMON_SUCCESS';\nexport const FETCH_POKEMON_FAILURE = 'FETCH_POKEMON_FAILURE';\n\nexport const fetchPokemonRequest = () => {\n    return {\n        type: FETCH_POKEMON_REQUEST\n    }\n}\n\nexport const fetchPokemonSuccess = (Pokemon) => {\n    return {\n        type: FETCH_POKEMON_SUCCESS,\n        payload: Pokemon\n    }\n}\n\nexport const fetchPokemonFailure = (error) => {\n    return {\n        type: FETCH_POKEMON_FAILURE,\n        payload: error\n    }\n}\n\nconst fetchPokemon = (valor) => {\n    return (dispatch) => {\n        dispatch(fetchPokemonRequest());\n        Axios.get(`https://pokeapi.co/api/v2/pokemon/${valor}`)\n            .then(res => {\n                dispatch(fetchPokemonSuccess([res.data]))\n            })\n            .catch(error => {\n                dispatch(fetchPokemonFailure('No se encontro el pokemon'))\n            });\n    }\n};\n\nexport default fetchPokemon;","import { FETCH_POKEMON_REQUEST, FETCH_POKEMON_SUCCESS, FETCH_POKEMON_FAILURE } from \"../actions/buscarAction\";\n\nconst initialState = {\n    loading: false,\n    pokemon: [],\n    error: ''\n}\n\nconst buscador = (state = initialState, action) => {\n    switch(action.type){\n        case FETCH_POKEMON_REQUEST: {\n            return{\n                ...state,\n                loading: true\n            }\n        }\n\n        case FETCH_POKEMON_SUCCESS: {\n            return{\n                error: '',\n                loading: false,\n                pokemon: action.payload\n            }\n        }\n\n        case FETCH_POKEMON_FAILURE: {\n            return{\n                pokemon: [],\n                loading: false,\n                error: action.payload\n            }\n        }\n        default: return state;\n    }\n}\n\nexport default buscador;","import { combineReducers } from \"redux\";\nimport game_shop from './gameShopReducer';\nimport buscador from \"./buscadorReducer\";\n\nconst rootReducer = combineReducers({\n    game_shop,\n    buscador\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from \"redux-thunk\";\n\n\nconst store = createStore(rootReducer, composeWithDevTools(\n    applyMiddleware(thunk)\n));\n\nexport default store;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport fetchPokemon from '../../redux/actions/buscarAction';\n\n\nfunction BuscadorPokemon() {\n\n    const dispatch = useDispatch();\n    const [pokemonName, setPokemonName] = useState('mewtwo');\n\n    return(\n        <div className=\"form-group\">\n            <label htmlFor=\"buscar_pokemon\" className=\"text-white\">Buscar Pokemon</label>\n            <input type=\"text\" \n                    className=\"form-control\" \n                    id=\"buscar_pokemon\" \n                    value={pokemonName} \n                    onChange={\n                        (e) => {\n                            setPokemonName(e.target.value)\n                        }\n                    }\n            />\n            <button className=\"btn btn-primary mt-3\"\n                    onClick={\n                        () => {\n                            dispatch(fetchPokemon(pokemonName));\n                        }\n                    }\n            >Enviar</button>\n        </div>\n    );\n}\n\nexport default BuscadorPokemon;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\n\nfunction ResultadoPokemon() {\n\n    const buscador = useSelector((state) => state.buscador);\n\n    return(\n        <div>\n            <h3 className=\"text-white\">Resultado:</h3>\n            {buscador.loading && <div className=\"text-warning\">Buscando...</div>}\n            {buscador.pokemon.length >= 1 &&\n                <div className=\"text-success\">\n                <img src={buscador.pokemon[0].sprites.front_default} alt={buscador.pokemon[0].name}/>\n                <span>{buscador.pokemon[0].name}</span>\n            </div>}\n            {buscador.error && <span className=\"text-danger\">{buscador.error}</span>}\n        </div>\n    );\n}\n\nexport default ResultadoPokemon;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport pokemonImg from './img/pokemon.jpg';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport CantidadPokemon from './components/CantidadPokemon';\nimport ComprarPokemon from './components/ComprarPokemon';\nimport store from './redux/store';\nimport BuscadorPokemon from './components/Buscador/BuscadorPokemon';\nimport ResultadoPokemon from './components/Buscador/ResultadoPokemon';\n\nfunction App() {\n\n  \n  return (\n    <Provider store={store}>\n\t\t<div className=\"App\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t<div className=\"card mt-5\" style={{maxWidth: '370px'}} >\n\t\t\t\t\t\t<div className=\"row no-gutters\">\n\t\t\t\t\t\t\t<div className=\"col-4\">\n\t\t\t\t\t\t\t\t<img src={pokemonImg} alt=\"pokemon\" className=\"card-img\"/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"col-8\">\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t\t<div className=\"card-title h3 text-center\">\n\t\t\t\t\t\t\t\t\t\t<CantidadPokemon />\n\t\t\t\t\t\t\t\t\t\t<ComprarPokemon />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-12 mt-4 border-top pt-3\">\n\t\t\t\t\t<BuscadorPokemon />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t<ResultadoPokemon />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}